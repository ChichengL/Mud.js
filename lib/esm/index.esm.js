class e{constructor(){this.viewers=[]}addViewer(e){this.viewers.push(e)}publish(){this.viewers.forEach((e=>{e.update()}))}}const t=e=>null!==e&&"object"==typeof e;class s{constructor(t){this.publisher=new e,this.obj2Proxy=new WeakMap,t.data=this.hijack(t.data)}hijack(s){const n=this;return t(s)?new Proxy(s,{get(s,o,i){const r=Reflect.get(s,o,i);if(e.viewer&&n.publisher.addViewer(e.viewer),t(r)){const e=n.obj2Proxy.get(r);if(e)return e;{const e=n.hijack(r);n.obj2Proxy.set(r,e)}}return r},set(e,t,s,o){const i=Reflect.set(e,t,s,o);return n.publisher.publish(),i},deleteProperty(e,t){const s=Reflect.deleteProperty(e,t);return n.publisher.publish(),s}}):s}}class n{constructor(t,s,n,o){this.mud=t,this.dataKey=s,this.updateHandler=n,this.node=o,e.viewer=this,this.oldValue=t.data[s],e.viewer=null}update(){const e=this.mud.data[this.dataKey];((e,t)=>{const s=typeof e;return s!==typeof t||(["function","object"].includes(s)?e.toString()!==t.toString():e!==t)})(this.oldValue,e)&&(this.oldValue=e,this.node?this.updateHandler(e,this.node):this.updateHandler(e))}}const o=(e,t,s,o)=>{const i=/\{(.+?)\}/,r=s.match(i);if(r){const c=r[1],[a,l]=((e,t)=>{const s=t.split(".");if(s.length>1){const t=s.pop(),n=s.reduce(((e,t)=>e[t]),e.data);return[n[t],e=>{n[t]=e}]}{const t=s[0],n=e.data;return[n[t],e=>{n[t]=e}]}})(e,c);if(!a)return a;const d=o?e=>{t.value=e}:e=>{t.textContent=e};new n(e,c,d),o&&t.addEventListener("input",(()=>{l(t.value)}));d(s.replace(i,a))}},i=(e,t,s)=>{const{name:o,value:i}=s;if("m-if"===o){const s=e.data[i];let o=null;const r=(e,t)=>{e?o&&o.parentNode.replaceChild(t,o):o=(e=>{const t=document.createComment("if");return e.parentNode?.replaceChild(t,e),t})(t)};new n(e,i,r,t),r(s,t)}};class r{constructor(e){this.mud=e,this.el=e.el,this.compile(this.el)}compile(e){const t=e.childNodes;Array.from(t).forEach((e=>{1===e.nodeType?this.compileForElement(e):3===e.nodeType&&this.compileForText(e),e.childNodes.length&&this.compile(e)}))}compileForElement(e){Array.from(e.attributes).forEach((t=>{const{name:s,value:r}=t;o(this.mud,e,r,!0),((e,t,s)=>{const{name:o,value:i}=s;if("for"===o){const[s,o]=i.split(":"),r=e.data[o],c=new RegExp(`{${s}}`),a=`${t.innerHTML}`,l=(e,t)=>{const s=e?.reduce(((e,t)=>{let s=a;return a.match(c)&&(s=a.replace(c,t)),e+s}),"");t.innerHTML=s};new n(e,o,l,t),l(r,t)}})(this.mud,e,t),i(this.mud,e,t)}))}compileForText(e){o(this.mud,e,e.textContent,!1)}}export default class{constructor(e){this.el=document.querySelector(e.el),this.data=e.data,new s(this),new r(this)}}"undefined"!=typeof window&&(window.MUD_VERSION="1.1.3");
